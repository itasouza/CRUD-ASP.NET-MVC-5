//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Generico.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CRUD_MVCEntities : DbContext
    {
        public CRUD_MVCEntities()
            : base("name=CRUD_MVCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Estatu> Estatus { get; set; }
        public virtual DbSet<Persona> Personas { get; set; }
        public virtual DbSet<Persona_Tipo> Persona_Tipo { get; set; }
        public virtual DbSet<vConsultaPersona> vConsultaPersonas { get; set; }
    
        [DbFunction("CRUD_MVCEntities", "fncConsultaPersonaPorId")]
        public virtual IQueryable<fncConsultaPersonaPorId_Result> fncConsultaPersonaPorId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fncConsultaPersonaPorId_Result>("[CRUD_MVCEntities].[fncConsultaPersonaPorId](@Id)", idParameter);
        }
    
        [DbFunction("CRUD_MVCEntities", "fncConsultaPersonaPorNombres")]
        public virtual IQueryable<fncConsultaPersonaPorNombres_Result> fncConsultaPersonaPorNombres(string nombres)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fncConsultaPersonaPorNombres_Result>("[CRUD_MVCEntities].[fncConsultaPersonaPorNombres](@Nombres)", nombresParameter);
        }
    
        [DbFunction("CRUD_MVCEntities", "fncConsultaPersonaPorNombresYApellidos")]
        public virtual IQueryable<fncConsultaPersonaPorNombresYApellidos_Result> fncConsultaPersonaPorNombresYApellidos(string nombres, string apellidos)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fncConsultaPersonaPorNombresYApellidos_Result>("[CRUD_MVCEntities].[fncConsultaPersonaPorNombresYApellidos](@Nombres, @Apellidos)", nombresParameter, apellidosParameter);
        }
    }
}
